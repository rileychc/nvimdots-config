local custom = {}

custom["echasnovski/mini.animate"] = {
	event = "VeryLazy",
	opts = function()
		-- don't use animate when scrolling with the mouse
		local mouse_scrolled = false
		-- for _, scroll in ipairs({ "Up", "Down" }) do
		-- 	local key = "<ScrollWheel" .. scroll .. ">"
		-- 	vim.keymap.set({ "", "i" }, key, function()
		-- 		mouse_scrolled = true
		-- 		return key
		-- 	end, { expr = true })
		-- end

		local animate = require("mini.animate")
		return {

			-- Cursor path
			cursor = {
				-- Whether to enable this animation
				enable = true,

				-- Timing of animation (how steps will progress in time)
				-- timing = --<function: implements linear total 250ms animation duration>,

				-- Path generator for visualized cursor movement
				-- path = --<function: implements shortest line path>,
			},

			-- Window open
			open = {
				-- Whether to enable this animation
				enable = true,

				-- Timing of animation (how steps will progress in time)
				-- timing = --<function: implements linear total 250ms animation duration>,

				-- Floating window config generator visualizing specific window
				-- winconfig = --<function: implements static window for 25 steps>,

				-- 'winblend' (window transparency) generator for floating window
				-- winblend = --<function: implements equal linear steps from 80 to 100>,
			},
			-- Window close
			close = {
				-- Whether to enable this animation
				enable = true,

				-- Timing of animation (how steps will progress in time)
				-- timing = --<function: implements linear total 250ms animation duration>,

				-- Floating window config generator visualizing specific window
				-- winconfig = --<function: implements static window for 25 steps>,

				-- 'winblend' (window transparency) generator for floating window
				-- winblend = --<function: implements equal linear steps from 80 to 100>,
			},
			-- resize = {
			-- 	timing = animate.gen_timing.linear({ duration = 100, unit = "total" }),
			-- },
			scroll = { --与其它插件冲突
				enable = false,
				-- timing = animate.gen_timing.linear({ duration = 150, unit = "total" }),
				-- subscroll = animate.gen_subscroll.equal({
				-- 	predicate = function(total_scroll)
				-- 		if mouse_scrolled then
				-- 			mouse_scrolled = false
				-- 			return false
				-- 		end
				-- 		return total_scroll > 1
				-- 	end,
				-- }),
			},
		}
	end,
	config = function(_, opts)
		require("mini.animate").setup(opts)
	end,
}

return custom
